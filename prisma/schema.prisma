generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://docker:docker@postgres-db:5432/app?schema=public"
}

model Person {
  personId  BigInt  @id @default(autoincrement()) @map("person_id") @db.BigInt
  fullName  String  @map("full_name") @db.VarChar(255)
  email     String  @unique @db.VarChar(255)
  document  String  @unique @db.Char(11) // CPF

  student   Student?
  authUser  User?   @relation("AuthUserPerson") @ignore

  @@map("person")
}

model Student {
  personId BigInt  @id @map("person_id") @db.BigInt
  person   Person  @relation(fields: [personId], references: [personId], onDelete: Cascade, onUpdate: Cascade)

  ra       String  @unique @db.VarChar(20)

  @@index([personId])
  @@index([ra])

  @@map("student")
}

model User {
  userId       BigInt      @id @default(autoincrement()) @map("user_id") @db.BigInt
  personId     BigInt      @unique @map("person_id") @db.BigInt
  email        String      @unique @db.VarChar(255)
  passwordHash String      @map("password_hash") @db.VarChar(255)
  isActive     Boolean     @default(true) @map("is_active")
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @updatedAt @map("updated_at")

  person       Person      @relation("AuthUserPerson", fields: [personId], references: [personId], onDelete: Restrict, onUpdate: Cascade)
  userRoles    UserRole[]

  @@map("auth_user")
}

model Role {
  roleId          BigInt           @id @default(autoincrement()) @map("role_id") @db.BigInt
  name            String           @unique @db.VarChar(100)
  description     String?          @db.VarChar(255)
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")

  userRoles       UserRole[]
  rolePermissions RolePermission[]

  @@map("auth_role")
}

model Permission {
  permissionId        BigInt            @id @default(autoincrement()) @map("permission_id") @db.BigInt
  name                String            @unique @db.VarChar(100)
  description         String?           @db.VarChar(255)
  createdAt           DateTime          @default(now()) @map("created_at")
  updatedAt           DateTime          @updatedAt @map("updated_at")

  rolePermissions     RolePermission[]

  @@map("auth_permission")
}

model UserRole {
  userRoleId BigInt @id @default(autoincrement()) @map("user_role_id") @db.BigInt
  userId     BigInt @map("user_id") @db.BigInt
  roleId     BigInt @map("role_id") @db.BigInt

  user       User   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  role       Role   @relation(fields: [roleId], references: [roleId], onDelete: Cascade)

  @@unique([userId, roleId])
  @@map("auth_user_role")
}

model RolePermission {
  rolePermissionId BigInt @id @default(autoincrement()) @map("role_permission_id") @db.BigInt
  roleId           BigInt @map("role_id") @db.BigInt
  permissionId     BigInt @map("permission_id") @db.BigInt

  role             Role   @relation(fields: [roleId], references: [roleId], onDelete: Cascade)
  permission       Permission @relation(fields: [permissionId], references: [permissionId], onDelete: Cascade)

  @@unique([roleId, permissionId])
  @@map("auth_role_permission")
}
