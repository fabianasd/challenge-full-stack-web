
networks:
  shared-services:
    external: true
    driver: bridge 

services:
  postgres-db:
    container_name: postgres-db
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: app
    networks:
      - shared-services
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker -d app"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"

  api:
    build:
      context: .
      target: dev
    environment:
      - NODE_ENV=dev
      - DEBUG=${DEBUG}
      - WATCH_FILES=${WATCH_FILES}
      - DATABASE_URL=postgresql://docker:docker@postgres-db:5432/app?schema=public
      - LOKI_URL=http://loki:3100
      - JWT_SECRET=dev-super-secret-jwt-key-please-change-123456
      - JWT_EXPIRES_IN=15m
    volumes:
      - ".:/application"
    networks:
      - shared-services
    depends_on:
      - loki
      - grafana
      - postgres-db
    ports:
      - "9229:9229"
      - "3333:3333"

  loki:
    restart: unless-stopped
    image: grafana/loki:2.9.8
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports: [ "3100:3100" ]
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    networks:
      - shared-services

  grafana:
    restart: unless-stopped
    image: grafana/grafana:11.1.4
    ports: [ "3001:3000" ]
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SECURITY_ADMIN_PASSWORD=12345678
    networks:
      - shared-services


volumes:
  db_data:
  loki-data:
